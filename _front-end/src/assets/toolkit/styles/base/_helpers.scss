@mixin section-spacing() {
  margin-top: $unit-md;
  margin-bottom: $unit-md;

  @include media($bp-lg) {
    margin-top: $unit-lg;
    margin-bottom: $unit-lg;
  }
}

@mixin section-gutters() {
  @include container($site-max-width);
  padding-left: $unit-sm;
  padding-right: $unit-sm;

  @include media($bp-md) {
    padding-left: $unit-md;
    padding-right: $unit-md;
  }
}

// increases clickable/hoverable/tappable area for element without increasing size visually or adding internal padding
@mixin tap-target($y: .5em, $x: 1em) {
  &:after {
    position: absolute;
    content: "";
    top: -$y;
    bottom: -$y;
    right: -$x;
    left: -$x;
  }
}

@mixin clearfix() {
  &:after {
    content: "";
    display: block; // yep block, we want margin collapsing!
    clear: both;
  }
}

@mixin word-wrap() {
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  word-break: break-word;
  hyphens: auto;
}


@mixin bg-gradient($clr, $dir: bottom, $percent: 5%) {
  // fallback color
  background-color: $clr;
  background-image: linear-gradient(to $dir, #{lighten($clr, $percent)}, #{darken($clr, $percent)});
  background-repeat: repeat-x;
}

// include under input {}

@mixin placeholder-color($clr: #444) {
  &::-webkit-input-placeholder { /* WebKit, Blink, Edge */
    color: $clr;
  }

  &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color: $clr;
    opacity:  1;
  }

  &::-moz-placeholder { /* Mozilla Firefox 19+ */
    color: $clr;
    opacity:  1;
  }

  &:-ms-input-placeholder { /* Internet Explorer 10-11 */
    color: $clr;
  }

  &:placeholder-shown { /* Standard (https://drafts.csswg.org/selectors-4/#placeholder) */
    color: $clr;
  }
}

// limits width and centers item
@mixin container($width: 1260px) {
  max-width: $width;
  margin-left: auto;
  margin-right: auto;
}

// allows background to be 100% width whilst content is contained and centered.
@mixin constrainer($maxwidth: 1260px) {
  $maxwidth: $maxwidth / 2;
  padding-left: calc(50% - #{$maxwidth});
  padding-right: calc(50% - #{$maxwidth});
}

// angled background stripes for disabled cards
@mixin bg-stripes($color1: rgba(#fff, .25), $color2: transparent) {
  background-size: 6px 6px;
  background-image: linear-gradient(-45deg, $color1 25%, $color2 25%,
                                            $color2 50%, $color1 50%,
                                            $color1 75%, $color2 75%, $color2);
  background-repeat: repeat;
}

@mixin plainlist {
  list-style: none;
  margin: 0;
  padding: 0;
}

// reset [type="button"] styling
@mixin plainbutton {
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  padding: 0;
  -webkit-appearance: button; /* for input */
  -webkit-user-select: none; /* for button */
  -moz-user-select: none;
  -ms-user-select: none;

  // pseudos
  &::-moz-focus-inner,
  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }
}

@mixin flexcenter {
  display: flex;
  justify-content: center;
  align-items: center;
  align-content: center;
}


@mixin visuallyhidden {
  position: absolute;
  height: 1px !important;
  width: 1px !important;
  margin: -1px !important;
  clip: rect(0 0 0 0);
  outline: 0;
  overflow: hidden;
  border: 0;
  padding: 0;
}

// u- denotes a utility class for use in markup like OOCSS
.u-visuallyhidden {
  @include visuallyhidden;
}

.-hidden {
  display: none !important;
}

// hidden but still takes up space, used with icons generally
.-ghost {
  opacity: 0 !important;
  pointer-events: none !important;
  cursor: none !important;
}

._strikeout {
  text-decoration: line-through;
}

._underline {
  text-decoration: underline;
}

// force box for components with no height (background floating icons for example)
// should not be used in production
._styleguidewrap {
  position: relative;
  height: 300px;
}

